$date
	Mon Apr 13 18:33:23 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module adder4bit_tb $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module UUT $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 4 ( S [3:0] $end
$var wire 1 " Cout $end
$var wire 3 ) C [2:0] $end
$scope module U0 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 % Cin $end
$var wire 1 , Cout $end
$var wire 1 - S $end
$upscope $end
$scope module U1 $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 Cin $end
$var wire 1 1 Cout $end
$var wire 1 2 S $end
$upscope $end
$scope module U2 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 5 Cin $end
$var wire 1 6 Cout $end
$var wire 1 7 S $end
$upscope $end
$scope module U3 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 : Cin $end
$var wire 1 " Cout $end
$var wire 1 ; S $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#20
17
15
b10 )
11
b101 !
b101 (
1-
1+
1/
1.
b11 $
b11 '
b10 #
b10 &
#40
12
1;
10
1:
b1110 !
b1110 (
0-
1,
b111 )
16
1"
14
19
1*
13
18
b1111 $
b1111 '
b1111 #
b1111 &
#60
02
07
0;
00
05
0:
b1 !
b1 (
1-
0,
01
b0 )
06
0"
0+
0/
04
09
0*
0.
03
08
b0 $
b0 '
b0 #
b0 &
1%
#80
12
17
10
1,
15
b11 )
11
b110 !
b110 (
0-
1+
1/
1.
b11 $
b11 '
b10 #
b10 &
#100
1;
1:
b1111 !
b1111 (
1-
b111 )
16
1"
14
19
1*
13
18
b1111 $
b1111 '
b1111 #
b1111 &
#120
