$date
	Wed Apr 29 17:07:10 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module s_device_tb $end
$var wire 1 ! TX3 $end
$var wire 1 " TX2 $end
$var wire 1 # TX1 $end
$var wire 1 $ TX0 $end
$var reg 1 % CLK $end
$var reg 8 & DEVICE_SELECT [7:0] $end
$var reg 1 ' RX $end
$var integer 32 ( i [31:0] $end
$scope module UUT0 $end
$var wire 1 % CLK $end
$var wire 1 ' RX $end
$var reg 8 ) ADDR [7:0] $end
$var reg 8 * ADDR_COMPARE [7:0] $end
$var reg 8 + DATA [7:0] $end
$var reg 1 $ TX $end
$var reg 4 , counter [3:0] $end
$upscope $end
$scope module UUT1 $end
$var wire 1 % CLK $end
$var wire 1 ' RX $end
$var reg 8 - ADDR [7:0] $end
$var reg 8 . ADDR_COMPARE [7:0] $end
$var reg 8 / DATA [7:0] $end
$var reg 1 # TX $end
$var reg 4 0 counter [3:0] $end
$upscope $end
$scope module UUT2 $end
$var wire 1 % CLK $end
$var wire 1 ' RX $end
$var reg 8 1 ADDR [7:0] $end
$var reg 8 2 ADDR_COMPARE [7:0] $end
$var reg 8 3 DATA [7:0] $end
$var reg 1 " TX $end
$var reg 4 4 counter [3:0] $end
$upscope $end
$scope module UUT3 $end
$var wire 1 % CLK $end
$var wire 1 ' RX $end
$var reg 8 5 ADDR [7:0] $end
$var reg 8 6 ADDR_COMPARE [7:0] $end
$var reg 8 7 DATA [7:0] $end
$var reg 1 ! TX $end
$var reg 4 8 counter [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 8
b1101100 7
b0 6
b101011 5
b0 4
b1000001 3
b0 2
b101010 1
b0 0
b111111 /
b0 .
b11011 -
b0 ,
b1011101 +
b0 *
b11010 )
b0 (
0'
b11010 &
0%
x$
x#
x"
x!
$end
#20
b1 ,
b1 0
b1 4
b1 8
1%
#30
1'
b1 (
#40
0%
#50
b10 8
b10 6
b10 4
b10 2
b10 0
b10 .
b10 ,
b10 *
1%
#60
0'
b10 (
#70
0%
#80
b11 ,
b11 0
b11 4
b11 8
1%
#90
1'
b11 (
#100
0%
#110
b100 8
b1010 6
b100 4
b1010 2
b100 0
b1010 .
b100 ,
b1010 *
1%
#120
b100 (
#130
0%
#140
b101 ,
b11010 *
b101 0
b11010 .
b101 4
b11010 2
b101 8
b11010 6
1%
#150
0'
b101 (
#160
0%
#170
b110 8
b110 4
b110 0
b110 ,
1%
#180
b110 (
#190
0%
#200
b111 ,
b111 0
b111 4
b111 8
1%
#210
b111 (
#220
0%
#230
b1000 8
b1000 4
b1000 0
b1000 ,
1%
#240
0%
b0 (
#250
b1001 ,
1$
b1001 0
b1001 4
b1001 8
1%
#260
0%
b1 (
#270
b1010 8
b1010 4
b1010 0
b1010 ,
0$
1%
#280
0%
b10 (
#290
b1011 ,
1$
b1011 0
b1011 4
b1011 8
1%
#300
0%
b11 (
#310
b1100 8
b1100 4
b1100 0
b1100 ,
1%
#320
0%
b100 (
#330
b1101 ,
b1101 0
b1101 4
b1101 8
1%
#340
0%
b101 (
#350
b1110 8
b1110 4
b1110 0
b1110 ,
0$
1%
#360
0%
b110 (
#370
b1111 ,
1$
b1111 0
b1111 4
b1111 8
1%
#380
0%
b111 (
#390
b0 8
b0 4
b0 0
b0 ,
0$
1%
#400
1'
b11011 &
b0 (
#410
0%
#420
b1 ,
b11011 *
b1 0
b11011 .
b1 4
b11011 2
b1 8
b11011 6
1%
#430
b1 (
#440
0%
#450
b10 8
b10 4
b10 0
b10 ,
1%
#460
0'
b10 (
#470
0%
#480
b11 ,
b11 0
b11 4
b11 8
1%
#490
1'
b11 (
#500
0%
#510
b100 8
b100 4
b100 0
b100 ,
1%
#520
b100 (
#530
0%
#540
b101 ,
b101 0
b101 4
b101 8
1%
#550
0'
b101 (
#560
0%
#570
b110 8
b110 4
b110 0
b110 ,
1%
#580
b110 (
#590
0%
#600
b111 ,
b111 0
b111 4
b111 8
1%
#610
b111 (
#620
0%
#630
b1000 8
b1000 4
b1000 0
b1000 ,
1%
#640
0%
b0 (
#650
b1001 ,
b1001 0
1#
b1001 4
b1001 8
1%
#660
0%
b1 (
#670
b1010 8
b1010 4
b1010 0
b1010 ,
1%
#680
0%
b10 (
#690
b1011 ,
b1011 0
b1011 4
b1011 8
1%
#700
0%
b11 (
#710
b1100 8
b1100 4
b1100 0
b1100 ,
1%
#720
0%
b100 (
#730
b1101 ,
b1101 0
b1101 4
b1101 8
1%
#740
0%
b101 (
#750
b1110 8
b1110 4
b1110 0
b1110 ,
1%
#760
0%
b110 (
#770
b1111 ,
b1111 0
0#
b1111 4
b1111 8
1%
#780
0%
b111 (
#790
b0 8
b0 4
b0 0
b0 ,
1%
#800
b101010 &
b0 (
#810
0%
#820
b1 ,
b11010 *
b1 0
b11010 .
b1 4
b11010 2
b1 8
b11010 6
1%
#830
1'
b1 (
#840
0%
#850
b10 8
b10 4
b10 0
b10 ,
1%
#860
0'
b10 (
#870
0%
#880
b11 ,
b11 0
b11 4
b11 8
1%
#890
1'
b11 (
#900
0%
#910
b100 8
b100 4
b100 0
b100 ,
1%
#920
0'
b100 (
#930
0%
#940
b101 ,
b1010 *
b101 0
b1010 .
b101 4
b1010 2
b101 8
b1010 6
1%
#950
1'
b101 (
#960
0%
#970
b110 8
b101010 6
b110 4
b101010 2
b110 0
b101010 .
b110 ,
b101010 *
1%
#980
0'
b110 (
#990
0%
#1000
b111 ,
b111 0
b111 4
b111 8
1%
#1010
b111 (
#1020
0%
#1030
b1000 8
b1000 4
b1000 0
b1000 ,
1%
#1040
0%
b0 (
#1050
b1001 ,
b1001 0
b1001 4
1"
b1001 8
1%
#1060
0%
b1 (
#1070
b1010 8
b1010 4
0"
b1010 0
b1010 ,
1%
#1080
0%
b10 (
#1090
b1011 ,
b1011 0
b1011 4
b1011 8
1%
#1100
0%
b11 (
#1110
b1100 8
b1100 4
b1100 0
b1100 ,
1%
#1120
0%
b100 (
#1130
b1101 ,
b1101 0
b1101 4
b1101 8
1%
#1140
0%
b101 (
#1150
b1110 8
b1110 4
b1110 0
b1110 ,
1%
#1160
0%
b110 (
#1170
b1111 ,
b1111 0
b1111 4
1"
b1111 8
1%
#1180
0%
b111 (
#1190
b0 8
b0 4
0"
b0 0
b0 ,
1%
#1200
1'
b101011 &
b0 (
#1210
0%
#1220
b1 ,
b101011 *
b1 0
b101011 .
b1 4
b101011 2
b1 8
b101011 6
1%
#1230
b1 (
#1240
0%
#1250
b10 8
b10 4
b10 0
b10 ,
1%
#1260
0'
b10 (
#1270
0%
#1280
b11 ,
b11 0
b11 4
b11 8
1%
#1290
1'
b11 (
#1300
0%
#1310
b100 8
b100 4
b100 0
b100 ,
1%
#1320
0'
b100 (
#1330
0%
#1340
b101 ,
b101 0
b101 4
b101 8
1%
#1350
1'
b101 (
#1360
0%
#1370
b110 8
b110 4
b110 0
b110 ,
1%
#1380
0'
b110 (
#1390
0%
#1400
b111 ,
b111 0
b111 4
b111 8
1%
#1410
b111 (
#1420
0%
#1430
b1000 8
b1000 4
b1000 0
b1000 ,
1%
#1440
0%
b0 (
#1450
b1001 ,
b1001 0
b1001 4
b1001 8
0!
1%
#1460
0%
b1 (
#1470
b1010 8
b1010 4
b1010 0
b1010 ,
1%
#1480
0%
b10 (
#1490
b1011 ,
b1011 0
b1011 4
b1011 8
1!
1%
#1500
0%
b11 (
#1510
b1100 8
b1100 4
b1100 0
b1100 ,
1%
#1520
0%
b100 (
#1530
b1101 ,
b1101 0
b1101 4
b1101 8
0!
1%
#1540
0%
b101 (
#1550
b1110 8
1!
b1110 4
b1110 0
b1110 ,
1%
#1560
0%
b110 (
#1570
b1111 ,
b1111 0
b1111 4
b1111 8
1%
#1580
0%
b111 (
#1590
b0 8
0!
b0 4
b0 0
b0 ,
1%
#1600
b1000 (
