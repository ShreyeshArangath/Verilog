$date
	Wed Apr  8 13:11:46 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module decoder5to8_tb $end
$var wire 32 ! D [31:0] $end
$var reg 5 " A [4:0] $end
$scope module UUT $end
$var wire 5 # A [4:0] $end
$var wire 12 $ W [11:0] $end
$var wire 32 % D [31:0] $end
$scope module U0 $end
$var wire 3 & A [2:0] $end
$var wire 6 ' W [5:0] $end
$var wire 8 ( D [7:0] $end
$scope module U0 $end
$var wire 2 ) A [1:0] $end
$var wire 4 * W [3:0] $end
$var wire 4 + D [3:0] $end
$scope module U0 $end
$var wire 1 , A $end
$var wire 2 - D [1:0] $end
$upscope $end
$scope module U1 $end
$var wire 1 . A $end
$var wire 2 / D [1:0] $end
$upscope $end
$upscope $end
$scope module U1 $end
$var wire 1 0 A $end
$var wire 2 1 D [1:0] $end
$upscope $end
$upscope $end
$scope module U1 $end
$var wire 2 2 A [1:0] $end
$var wire 4 3 W [3:0] $end
$var wire 4 4 D [3:0] $end
$scope module U0 $end
$var wire 1 5 A $end
$var wire 2 6 D [1:0] $end
$upscope $end
$scope module U1 $end
$var wire 1 7 A $end
$var wire 2 8 D [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 8
07
b1 6
05
b1000 4
b101 3
b0 2
b1 1
00
b1 /
0.
b1 -
0,
b1000 +
b101 *
b0 )
b10000000 (
b100001 '
b0 &
b10000000000000000000000000000000 %
b100000001000 $
b0 #
b0 "
b10000000000000000000000000000000 !
$end
#15
b1000000000000000000000000000000 !
b1000000000000000000000000000000 %
b10000001000 $
b1000000 (
b10001 '
b100 +
b1001 *
b10 -
1,
b1 )
b1 &
b1 "
b1 #
#30
b100000000000000000000000000000 !
b100000000000000000000000000000 %
b1000001000 $
b100000 (
b1001 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b10 &
b10 "
b10 #
#45
b10000000000000000000000000000 !
b10000000000000000000000000000 %
b100001000 $
b10000 (
b101 '
b1 +
b1010 *
b10 -
1,
b11 )
b11 &
b11 "
b11 #
#60
b1000000000000000000000000000 !
b1000000000000000000000000000 %
b1000 +
b10001000 $
b1000 (
b1 -
0,
b101 *
b1 /
0.
b0 )
b100010 '
b10 1
10
b100 &
b100 "
b100 #
#75
b100000000000000000000000000 !
b100000000000000000000000000 %
b1001000 $
b100 (
b10010 '
b100 +
b1001 *
b10 -
1,
b1 )
b101 &
b101 "
b101 #
#90
b10000000000000000000000000 !
b10000000000000000000000000 %
b101000 $
b10 (
b1010 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b110 &
b110 "
b110 #
#105
b1000000000000000000000000 !
b1000000000000000000000000 %
b11000 $
b1 (
b110 '
b1 +
b1010 *
b10 -
1,
b11 )
b111 &
b111 "
b111 #
#120
b100000000000000000000000 !
b100000000000000000000000 %
b1000 +
b10000000 (
b100000000100 $
b100 4
b1 -
0,
b101 *
b1 /
0.
b0 )
b100001 '
b1 1
00
b1001 3
b10 6
15
b0 &
b1 2
b1000 "
b1000 #
#135
b10000000000000000000000 !
b10000000000000000000000 %
b10000000100 $
b1000000 (
b10001 '
b100 +
b1001 *
b10 -
1,
b1 )
b1 &
b1001 "
b1001 #
#150
b1000000000000000000000 !
b1000000000000000000000 %
b1000000100 $
b100000 (
b1001 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b10 &
b1010 "
b1010 #
#165
b100000000000000000000 !
b100000000000000000000 %
b100000100 $
b10000 (
b101 '
b1 +
b1010 *
b10 -
1,
b11 )
b11 &
b1011 "
b1011 #
#180
b10000000000000000000 !
b10000000000000000000 %
b1000 +
b10000100 $
b1000 (
b1 -
0,
b101 *
b1 /
0.
b0 )
b100010 '
b10 1
10
b100 &
b1100 "
b1100 #
#195
b1000000000000000000 !
b1000000000000000000 %
b1000100 $
b100 (
b10010 '
b100 +
b1001 *
b10 -
1,
b1 )
b101 &
b1101 "
b1101 #
#210
b100000000000000000 !
b100000000000000000 %
b100100 $
b10 (
b1010 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b110 &
b1110 "
b1110 #
#225
b10000000000000000 !
b10000000000000000 %
b10100 $
b1 (
b110 '
b1 +
b1010 *
b10 -
1,
b11 )
b111 &
b1111 "
b1111 #
#240
b1000000000000000 !
b1000000000000000 %
b1000 +
b10000000 (
b100000000010 $
b10 4
b1 -
0,
b101 *
b1 /
0.
b0 )
b100001 '
b1 1
00
b1 6
05
b110 3
b10 8
17
b0 &
b10 2
b10000 "
b10000 #
#255
b100000000000000 !
b100000000000000 %
b10000000010 $
b1000000 (
b10001 '
b100 +
b1001 *
b10 -
1,
b1 )
b1 &
b10001 "
b10001 #
#270
b10000000000000 !
b10000000000000 %
b1000000010 $
b100000 (
b1001 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b10 &
b10010 "
b10010 #
#285
b1000000000000 !
b1000000000000 %
b100000010 $
b10000 (
b101 '
b1 +
b1010 *
b10 -
1,
b11 )
b11 &
b10011 "
b10011 #
#300
b100000000000 !
b100000000000 %
b1000 +
b10000010 $
b1000 (
b1 -
0,
b101 *
b1 /
0.
b0 )
b100010 '
b10 1
10
b100 &
b10100 "
b10100 #
#315
b10000000000 !
b10000000000 %
b1000010 $
b100 (
b10010 '
b100 +
b1001 *
b10 -
1,
b1 )
b101 &
b10101 "
b10101 #
#330
b1000000000 !
b1000000000 %
b100010 $
b10 (
b1010 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b110 &
b10110 "
b10110 #
#345
b100000000 !
b100000000 %
b10010 $
b1 (
b110 '
b1 +
b1010 *
b10 -
1,
b11 )
b111 &
b10111 "
b10111 #
#360
b10000000 !
b10000000 %
b1000 +
b10000000 (
b100000000001 $
b1 4
b1 -
0,
b101 *
b1 /
0.
b0 )
b100001 '
b1 1
00
b1010 3
b10 6
15
b0 &
b11 2
b11000 "
b11000 #
#375
b1000000 !
b1000000 %
b10000000001 $
b1000000 (
b10001 '
b100 +
b1001 *
b10 -
1,
b1 )
b1 &
b11001 "
b11001 #
#390
b100000 !
b100000 %
b1000000001 $
b100000 (
b1001 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b10 &
b11010 "
b11010 #
#405
b10000 !
b10000 %
b100000001 $
b10000 (
b101 '
b1 +
b1010 *
b10 -
1,
b11 )
b11 &
b11011 "
b11011 #
#420
b1000 !
b1000 %
b1000 +
b10000001 $
b1000 (
b1 -
0,
b101 *
b1 /
0.
b0 )
b100010 '
b10 1
10
b100 &
b11100 "
b11100 #
#435
b100 !
b100 %
b1000001 $
b100 (
b10010 '
b100 +
b1001 *
b10 -
1,
b1 )
b101 &
b11101 "
b11101 #
#450
b10 !
b10 %
b100001 $
b10 (
b1010 '
b10 +
b1 -
0,
b110 *
b10 /
1.
b10 )
b110 &
b11110 "
b11110 #
#465
b1 !
b1 %
b10001 $
b1 (
b110 '
b1 +
b1010 *
b10 -
1,
b11 )
b111 &
b11111 "
b11111 #
#480
